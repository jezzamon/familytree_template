/*Now the CSS*/
* {margin: 0; padding: 0;}

/*Minwidth class so the family names don't wrap*/
.minwidth { min-width:4700px; width: auto !important; width: 4700px; }

/li{
	display:none;
}
.tree ul {
	padding-top: 20px; position: relative;
	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}


img {
	max-width:100%;
	height: auto;
}
.tree li {
	
	float: left; text-align: center;
	list-style-type: none;
	position: relative;
	padding: 20px 5px 0 5px;
	
	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.tree li::before, .tree li::after{
	content: '';
	position: absolute; top: 0; right: 50%;
	border-top: 1px solid #ccc;
	width: 50%; height: 20px;
	z-index: -10;
}
.tree li::after{
	right: auto; left: 50%;
	border-left: 1px solid #ccc;
	z-index: -10;
}

/*We need to remove left-right connectors from elements without 
any siblings*/
.tree li:only-child::after, .tree li:only-child::before {
	display: none;
	
}

/*Remove space from the top of single children*/
.tree li:only-child{ padding-top: 0;}

/*Remove left connector from first child and 
right connector from last child*/
.tree li:first-child::before, .tree li:last-child::after{
	border: 0 none;
}
/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before{
	border-right: 1px solid #ccc;
	border-radius: 0 5px 0 0;
	-webkit-border-radius: 0 5px 0 0;
	-moz-border-radius: 0 5px 0 0;
}
.tree li:first-child::after{
	border-radius: 5px 0 0 0;
	-webkit-border-radius: 5px 0 0 0;
	-moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before{
	content: '';
	position: absolute; top: 0; left: 50%;
	border-left: 1px solid #ccc;
	width: 0; height: 20px;
	z-index:-10;
}


.tree li a{
	border: 1px solid #ccc;
	padding: 5px 10px;
	text-decoration: none;
	color: #666;
	font-family: lato, verdana, tahoma;
	font-size: 15px;
	display: inline-block;
	
	border-radius: 5px;
	-webkit-border-radius: 5px;
	-moz-border-radius: 5px;
	
	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}

li a div.info {
	color:green;
	display:none;
}

.info img {
	height:250px;
	
}

.tree li a+a {
	margin-left:20px;
	position: relative;
}

.tree li a+a::before {
	content:'';
	position:absolute;
	border-top:1px solid #ccc;
	top:50%;
	left:-25px;
	width:25px;
	z-index: -10;
}
#overconnecter {
	z-index:10;
}



/*Time for some hover effects*/
/*We will apply the hover effect the the lineage of the element also*/

.tree li a:hover, .tree li a:hover+ul li a, .tree li a:hover+a {
	background: salmon /*#c8e4f8*/ ; color: #000; border: 1px solid #94a0b4;
	transform:scale(1.1);
}






/*Connector styles on hover*/
.tree li a:hover+ul li::after, 
.tree li a:hover+ul li::before, 
.tree li a:hover+ul::before, 
.tree li a:hover+ul ul::before{
	border-color:  salmon/*#94a0b4*/;
}

.image-container {
	display:inline-block;
}
